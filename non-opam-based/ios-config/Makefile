BINDIR=$(PREFIX)/ios-sysroot/bin
LIBDIR=$(PREFIX)/ios-sysroot/lib/ocaml
STUBLIBDIR=$(LIBDIR)/stublibs
MANDIR=$(PREFIX)/ios-sysroot/man
MANEXT=1
CAMLRUN=$(HOST_BIN)/ocamlrun
CAMLYACC=$(HOST_BIN)/ocamlyacc
RANLIB=$(TOOLCHAIN_BIN)/ranlib
RANLIBCMD=$(TOOLCHAIN_BIN)/ranlib
ARCMD=$(TOOLCHAIN_BIN)/ar
SHARPBANGSCRIPTS=true
UNIX_OR_WIN32=unix
UNIXLIB=unix
GRAPHLIB=nograph
BNG_ARCH=generic
BNG_ASM_LEVEL=0
PTHREAD_LINK=
PTHREAD_CAML_LINK=
X11_INCLUDES=
X11_LINK=
TK_DEFS=
TK_LINK=
LIBBFD_LINK=
BYTECC=$(TOOLCHAIN_BIN)/clang $(CC_FLAGS) -O2
BYTECCCOMPOPTS=-Wall
BYTECCLINKOPTS=$(LINK_OPTS)
BYTECCLIBS=-lm
BYTECCRPATH=-Wl,-rpath,
EXE=
SUPPORTS_SHARED_LIBRARIES=false
SHAREDCCCOMPOPTS=
MKSHAREDLIBRPATH=
NATDYNLINKOPTS=
SYSLIB=-l$(1)
#ml let syslib x = "-l"^x;;
### How to build a static library
MKLIB=$(TOOLCHAIN_BIN)/ar rc $(1) $(2); $(TOOLCHAIN_BIN)/ranlib $(1)
#ml let mklib out files opts = Printf.sprintf "ar rc %s %s %s; ranlib %s" out opts files out;;
# ARCH & SUBARCH are defined externally
# ARCH=%{conf-ios:arch}%
MODEL=$(SUBARCH)
SYSTEM=macosx
NATIVECC=$(BYTECC)
NATIVECCCOMPOPTS=-Wall
NATIVECCPROFOPTS=-Wall
NATIVECCLINKOPTS=
NATIVECCRPATH=-Wl,-rpath,
NATIVECCLIBS=-lm
ASM=$(TOOLCHAIN_BIN)/as -arch $(SUBARCH) -miphoneos-version-min=$(MIN_IOS_VERSION)
ASPP=$(BYTECC) -c
ASPPPROFFLAGS=-DPROFILING
PROFILING=noprof
DYNLINKOPTS= -ldl
OTHERLIBRARIES=unix str num bigarray systhreads dynlink
CC_PROFILE=-pg
SYSTHREAD_SUPPORT=true
PARTIALLD=$(TOOLCHAIN_BIN)/ld -r
PACKLD=$(PARTIALLD) $(NATIVECCLINKOPTS) -o #
DLLCCCOMPOPTS=
IFLEXDIR=
O=o
A=a
SO=so
EXT_OBJ=.o
EXT_ASM=.s
EXT_LIB=.a
EXT_DLL=.so
EXTRALIBS=
CCOMPTYPE=cc
TOOLCHAIN=cc
NATDYNLINK=false
CMXS=cmxa
MKEXE=$(BYTECC)
MKEXEDEBUGFLAG=-g
MKDLL=
MKMAINDLL=
RUNTIMED=runtimed
SHARED=noshared
WITH_DEBUGGER=
WITH_OCAMLDOC=
WITH_OCAMLBUILD=
ASM_CFI_SUPPORTED=false
WITH_FRAME_POINTERS=false
TARGET=$(SUBARCH)-apple-darwin